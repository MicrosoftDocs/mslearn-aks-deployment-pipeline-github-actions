# This is a basic workflow to help you get started with Actions

name: Build and push the latest build to staging

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Docker Login
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ secrets.ACR_NAME }}
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}
    
      - name: Build and push staging image
        uses: docker/build-push-action@v3.1.1
        with:
          context: .
          push: true
          tags: ${{secrets.ACR_NAME}}/contoso-website:latest

    
  deploy:
    runs-on: ubuntu-20.04
    needs: build_push_image # Will wait for the execution of the previous job
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Helm tool installer
        uses: Azure/setup-helm@v3.3
        with:
          version: v3.3.1
          
      - name: Get AKS Credentials
        uses: Azure/aks-set-context@v3
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          # Resource Group Name
          resource-group: mslearn-gh-pipelines-15250
          # AKS Cluster Name
          cluster-name: contoso-video
          
      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }}
    
    
